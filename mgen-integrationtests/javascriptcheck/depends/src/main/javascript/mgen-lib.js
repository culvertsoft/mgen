(function(){var q={generate:function(d,e){function k(b){var a;d.classes.hasOwnProperty(b)&&(a=f.getClass(d.lookup(d.classes[b].__t)),a.prototype instanceof f||(b=d.classes[b].__t.slice(0,-3),b=0<b.length?d.lookup(b):null,b?(k(b),a.prototype=new (f.getClass(b))("NO_CONSTRUCT")):a.prototype=new f,a.prototype.constructor=a))}function q(b){b=h(b);var a=f[b];Array.isArray(a)&&(f[b]=y(a))}function y(b){return function(){var a,c;c="Call to conflicting constructor, please use full path istead of shorthand notation. \nPossible versions are: \n";
for(a in b)c=c+"\t"+a+"\n";throw c;}}function h(b){b=b.split(".");return b[b.length-1]}function z(b,a){function c(b,a){if("string"===typeof a)return c(b,a.split("."));if(0===a.length||void 0===b[a[0]]){if("function"!==typeof b)throw"Class "+d+" not found in classRegistryBlueprint.";return b}return c(b[a[0]],a.slice(1))}var d=a;return c(b,a)}function s(b,a,c){"string"===typeof a?s(b,a.split("."),c):1===a.length?b[a[0]]=c:(b[a[0]]=b[a[0]]||{},s(b[a[0]],a.slice(1),c))}function A(b,a){var c,l;c=B(b);
s(f,a,c);f[h(a)]?(c=(new c("NO_CONSTRUCT")).__t,c=d.lookup(c),"function"===typeof f[h(a)]?(l=(new (f[h(a)])("NO_CONSTRUCT")).__t,l=d.lookup(l.__t),f[h(a)]=[l,c]):f[h(a)].push(c)):f[h(a)]=c}function B(b){var a={};a[d.lookup(b.__t)]=function(a,l){if("NO_CONSTRUCT"===a)this.__t=b.__t;else{var r=!1;"DEFAULT"===a&&(r=!0,a=null);l=l||{};w(l,e);if(a){if(a.__t&&b.__t!=a.__t){if(a.__t.substr(0,b.__t.length-1)===b.__t)return new (f.getClass(d.lookup(a.__t)))(a);throw" Tried to create "+d.lookup(b.__t)+" but got "+
d.lookup(a.__t);}if(l.validate){var g=a,k,m;for(m in g)if(g.hasOwnProperty(m)&&!b[m]&&"__t"!=m){r="";for(k in b)"__t"!=k&&(r+=" \t "+k+" \n ");throw d.lookup(b.__t)+" does not have field "+m+" \n Possible options are: \n"+r+" \n ";}}}for(var n in b)if(b.hasOwnProperty(n))if("__t"===n)this.__t=b.__t;else{try{if(l.validate&&!r){k=n;var h;var p=b[n];m=n;var g=a,q=l;if(-1<p.flags.indexOf("required")){if(!g||!g[m])throw'Missing REQUIRED value: "'+m+'" of type '+p.type;h=v(p.type,g[m],q)}else h=g&&"undefined"!==
typeof g[m]?v(p.type,g&&g[m]||null,q):null;this[k]=h}else if(r){k=n;var t;var s=b[n];m=n;g=l;if(g.validate&&-1<s.flags.indexOf("required"))throw'Missing REQUIRED value: "'+m+'" of type '+s.type;t=v(s.type,null,g);this[k]=t}else this[n]=a?a[n]:null}catch(u){if(l.never_catch_error)throw u;throw"Could not create object "+d.lookup(b.__t)+" Reason: \n"+u;}null===this[n]&&delete this[n]}}};return a[d.lookup(b.__t)]}function v(b,a,c){var k,e,g=b.split(":");d.classes[g[0]]&&(g[1]=b,g[0]="object");switch(g[0]){case "object":if(a&&
"object"!==typeof a)throw"Tried to create "+b+" but had no object data.";a=a||{};return e=new (f.getClass(g[1]))(a);case "list":if(a&&!Array.isArray(a))throw"Tried to create "+b+" but had no array data.";a=a||[];e=[];k=f.getClass(g[1]);a.forEach(function(a){e.push(new k(a))});return e;case "map":if(a&&"object"!==typeof a)throw"Tried to create "+b+" but had no object data.";a=a||{};e={};for(var h in a)a.hasOwnProperty(h)&&(e[v(g[1],h,c)]=v(g[2],a[h],c));return e;case "enum":return C(a,g[1].split(", "),
c);case "int8":return t(a,8,b,c),a||0;case "int16":return t(a,16,b,c),a||0;case "int32":return t(a,32,b,c),e=a||0;case "int64":return t(a,64,b,c),a||0;case "float32":return x(a,32,b,c),a||0;case "float64":return x(a,64,b,c),a||0;case "string":if(a&&"string"!==typeof a)throw"Tried to create "+b+" but had no string data.";return a||""}}function C(b,a,c){if(!b)return null;if(b&&"string"!==typeof b)throw"Tried to create with wrong type (needed string).";if(c.strict_enums&&-1===a.indexOf(b))throw'Tried to create enum "'+
b+'" but only '+a.join(", ")+" are allowed.You can bypass this with setting strict_enums to false";}function t(b,a,c,d){32<a&&d.warn&&window.console.warn("mgen_js cannot handle 64 bit integers well due to javascript limitations. See https://developer.mozilla.org/en-US/docs/Mozilla/js-ctypes/js-ctypes_reference/Int64");if("undefined"!==typeof b&&null!==b){if("number"!==typeof b)throw"Tried to create "+c+" but data was of type: "+typeof b;d=parseInt(b,10);if(0<=d-parseFloat(d)&&parseFloat(b,10)===parseInt(b,
10)){c=Math.pow(2,a-1);if(b>c-1||b<-c)throw b+" is out of range for int"+a;return!0}throw"Tried to create "+c+" but data ( "+b+" ) was not a valid integer.";}}function x(b,a,c){if("undefined"!==typeof b&&null!==b&&!(0<=b-parseFloat(b)))throw"Tried to create "+c+" but data ( "+b+" ) was not a valid float.";}function w(b,a){for(var c in a)a.hasOwnProperty(c)&&(b[c]="undefined"===typeof b[c]?a[c]:b[c])}var u,p,f;e=e||{};e={warn:"undefined"===typeof e.warn?!0:e.warn,never_catch_error:"undefined"===typeof e.never_catch_error?
!1:e.never_catch_error,validate:"undefined"===typeof e.validate?!0:e.validate,strict_enums:"undefined"===typeof e.strict_enums?!0:e.strict_enums};f=function(){throw"Do not call a classRegistry with new! \n You probably wanted to do something like: new classRegistry.package.path.ClassName()";};f.validate=function(b,a){a=a||{};w(a,{warn:!1,validate:!0});w(a,e);try{new (f.getClass(d.lookup(b.__t)))(b,a)}catch(c){a.warn&&window.console.warn("Validation failed. Reason: \n"+c);if(a.never_catch_error)throw c;
return!1}return!0};f.hasClassWithId=function(b){return void 0!==d.lookup(b)};f.getClassWithId=function(b){return f.getClass(d.lookup(b))};f.hasClass=function(b){return void 0!==d.classes[b]||void 0!==typeof f[b]};f.getClass=function(b){return z(f,b)};for(p in d.classes)d.classes.hasOwnProperty(p)&&A(d.classes[p],p);for(u in d.classes)k(u);for(u in d.classes)d.classes.hasOwnProperty(p)&&q(p);return f},jsonHandler:function(d){var e=function(d){this.classRegistry=d};e.prototype.stringToObject=function(d){if("string"!==
typeof d)throw"Create from string needs a string argument";d=JSON.parse(d);return this.jsonToObject(d)};e.prototype.jsonToObject=function(d){return new (this.classRegistry.getClassWithId(d.__t))(d)};e.prototype.objectToString=function(d){return JSON.stringify(d)};return new e(d)}};"function"===typeof define&&define.amd?define("mGen",[],function(){return q}):window.mGen=q;return q})();